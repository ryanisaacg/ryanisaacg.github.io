<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title></title>
        <link>https://ryanisaacg.com</link>
        <description></description>
        <generator>Zola</generator>
        <language>en</language>
        <atom:link href="https://ryanisaacg.com/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Sun, 24 May 2020 00:00:00 +0000</lastBuildDate>
        
            <item>
                <title>Website Makeover, Again</title>
                <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
                <link>https://ryanisaacg.com/posts/new-blog-2/</link>
                <guid>https://ryanisaacg.com/posts/new-blog-2/</guid>
                <description>&lt;p&gt;Out with the old, in with the new! After some frustration with Hugo, I&#x27;ve moved to &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;&quot;&gt;Zola&lt;&#x2F;a&gt; and some light CSS.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>A Quicksilver Chanukah, Day 8: Rust Gamedev and the Web</title>
                <pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate>
                <link>https://ryanisaacg.com/posts/quicksilver-chanukah-2019-day-8/</link>
                <guid>https://ryanisaacg.com/posts/quicksilver-chanukah-2019-day-8/</guid>
                <description>&lt;p&gt;This year has been great for Rust gamedev on the web. Huge progress has been made towards a full game stack being available more-or-less &amp;quot;for free:&amp;quot; most of the foundational crates have available web support, in one way or another.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>A Quicksilver Chanukah, Day 7: Quicksilver&#x27;s New Graphics</title>
                <pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate>
                <link>https://ryanisaacg.com/posts/quicksilver-chanukah-2019-day-7/</link>
                <guid>https://ryanisaacg.com/posts/quicksilver-chanukah-2019-day-7/</guid>
                <description>&lt;p&gt;The graphics API of Quicksilver isn&#x27;t as dire need of a rework as the &lt;a href=&quot;..&#x2F;quicksilver-chanukah-2019-day-6&quot;&gt;lifecycle APIs&lt;&#x2F;a&gt;, but I wanted to take the next breaking change as an opportunity to address some long-standing issues. &lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>A Quicksilver Chanukah, Day 6: Quicksilver&#x27;s New Lifecycle</title>
                <pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate>
                <link>https://ryanisaacg.com/posts/quicksilver-chanukah-2019-day-6/</link>
                <guid>https://ryanisaacg.com/posts/quicksilver-chanukah-2019-day-6/</guid>
                <description>&lt;p&gt;Quicksilver has always had some major API compromises to deliver on its core promise: write a game once, and it targets desktop and the web with no changes. The two ugliest compromises are the &lt;code&gt;State&lt;&#x2F;code&gt; and &lt;code&gt;Asset&lt;&#x2F;code&gt; APIs, for managing your application&#x27;s core loop and file loading, respectively.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>A Quicksilver Chanukah, Day 5: Golem</title>
                <pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate>
                <link>https://ryanisaacg.com/posts/quicksilver-chanukah-2019-day-5/</link>
                <guid>https://ryanisaacg.com/posts/quicksilver-chanukah-2019-day-5/</guid>
                <description>&lt;p&gt;&lt;code&gt;golem&lt;&#x2F;code&gt; is a mostly-safe graphics API that targets OpenGL 3.2 and WebGL 1 that helps make writing GL less painful.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>A Quicksilver Chanukah, Day 4: Blinds</title>
                <pubDate>Wed, 25 Dec 2019 00:00:00 +0000</pubDate>
                <link>https://ryanisaacg.com/posts/quicksilver-chanukah-2019-day-4/</link>
                <guid>https://ryanisaacg.com/posts/quicksilver-chanukah-2019-day-4/</guid>
                <description>&lt;p&gt;With the recent update to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;&lt;code&gt;winit&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, it gained web support! This is great, and it means that Quicksilver doesn&#x27;t need to have its own parallel implementation of windowing. However, there is room for an abstraction that&#x27;s a little simpler than Winit, and takes advantage of &lt;code&gt;async&#x2F;.await&lt;&#x2F;code&gt;, which is where &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;blinds&quot;&gt;&lt;code&gt;blinds&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; comes in.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>A Quicksilver Chanukah, Day 3: Gestalt</title>
                <pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate>
                <link>https://ryanisaacg.com/posts/quicksilver-chanukah-2019-day-3/</link>
                <guid>https://ryanisaacg.com/posts/quicksilver-chanukah-2019-day-3/</guid>
                <description>&lt;p&gt;Often your application might want to store gamestate or configurations, but the web has no filesystem access. Additionally, you don&#x27;t want to just dump files in the user&#x27;s home directory; each desktop operating system has a different preferred location for storing application-specific data, and often different locations for different kinds of data.&lt;&#x2F;p&gt;
&lt;p&gt;Introducing &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;gestalt&quot;&gt;&lt;code&gt;gestalt&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, a library that bundles up your data and stores it away so you don&#x27;t have to.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>A Quicksilver Chanukah, Day 2: Platter</title>
                <pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate>
                <link>https://ryanisaacg.com/posts/quicksilver-chanukah-2019-day-2/</link>
                <guid>https://ryanisaacg.com/posts/quicksilver-chanukah-2019-day-2/</guid>
                <description>&lt;p&gt;This year saw the release of &lt;code&gt;async&#x2F;.await&lt;&#x2F;code&gt; in stable Rust, marking a huge change in how asynchronous code is written. Previously, one would have to chain a series of combinators onto a &lt;code&gt;Future&lt;&#x2F;code&gt; instance to accomplish asyncrhonous tasks. In Quicksilver, this was used for asset loading (for compatibility with the web backend), and has been a frequent source of pain.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>A Quicksilver Chanukah: Day 1</title>
                <pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate>
                <link>https://ryanisaacg.com/posts/quicksilver-chanukah-2019/</link>
                <guid>https://ryanisaacg.com/posts/quicksilver-chanukah-2019/</guid>
                <description>&lt;p&gt;I started this year with a &lt;a href=&quot;..&#x2F;state-of-quicksilver-feb-2019&quot;&gt;blog post about the state of Quicksilver&lt;&#x2F;a&gt; where I set a goal for myself: get web support for important game development crates upstreamed. At the end of the year, I&#x27;m happy to update this work (by me and many others!) has been a success, and the core of Rust&#x27;s game ecosystem is now-web enabled. In the future, I want to write a brief overview of those changes, but for now I want to focus on their relevance to Quicksilver.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Website Makeover</title>
                <pubDate>Sat, 20 Jul 2019 00:00:00 +0000</pubDate>
                <link>https://ryanisaacg.com/posts/new-blog-debut/</link>
                <guid>https://ryanisaacg.com/posts/new-blog-debut/</guid>
                <description>&lt;p&gt;So www.ryanisaacg.com has a very new look, powered by Hugo and my (fairly small) fork of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rhazdon&#x2F;hugo-theme-hello-friend-ng&quot;&gt;hello-friend-ng&lt;&#x2F;a&gt; theme.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>The State of Quicksilver Feb 2019</title>
                <pubDate>Mon, 04 Feb 2019 00:00:00 +0000</pubDate>
                <link>https://ryanisaacg.com/posts/state-of-quicksilver-feb-2019/</link>
                <guid>https://ryanisaacg.com/posts/state-of-quicksilver-feb-2019/</guid>
                <description>&lt;p&gt;For anyone who doesn&#x27;t know, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ryanisaacg&#x2F;quicksilver&quot;&gt;Quicksilver&lt;&#x2F;a&gt; is my 2D game framework that targets desktop and web. It is a pure-Rust library that focuses on ergonomics and simplicity.&lt;&#x2F;p&gt;
&lt;p&gt;Quicksilver is part of a small (but growing) set of Rust game engines. Notable are the Amethyst project, an open-source game engine, and ggez, a LOVE-inspired 2D game framework.
Increasingly it is practical to build an entire game with only the Rust toolchain: winit provides windowing, a variety of crates allow access to platform graphics APIs, rodio provides sound, rusttype for font rendering, etc. A pure-Rust game framework is getting easier to make all the time.&lt;&#x2F;p&gt;
</description>
            </item>
        
    </channel>
</rss>
